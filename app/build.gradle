apply plugin: "com.android.application"

apply plugin: "kotlin-android"

apply plugin: "kotlin-android-extensions"

apply plugin: "kotlin-kapt"

apply plugin: 'com.google.firebase.crashlytics'

apply plugin: 'com.google.firebase.firebase-perf'

apply plugin: 'com.google.firebase.appdistribution'

android {
    buildToolsVersion "29.0.3"

    compileSdkVersion rootProject.compile_sdk_version

    def versionMajor = 0
    def versionMinor = 0
    def versionPatch = 1
    def versionNumber = 2

    defaultConfig {
        applicationId "com.albuquerque.moviecatalog"
        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.target_sdk_version
        versionCode versionNumber
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            keyAlias "moviecatalog_key"
            keyPassword "u86txAvyUJfFpKNu"
            storeFile file("../moviecatalog_keystore.jks")
            storePassword "jTjvDXF85LgT3gXX"
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            def prename = outputFile.name.substring(0, outputFile.name.length() - 4)

            if (outputFile != null && outputFile.name.endsWith('.apk') && !outputFile.name.endsWith('debug.apk')) {
                def date = new Date().format('yyyyMMddHHmmss')
                outputFileName = "moviecatalog-${prename}-${versionMajor}.${versionMinor}.${versionPatch}-${versionNumber}-${date}.apk"
            }
        }
    }

    bundle {
        density {
            // Different APKs are generated for devices with different screen densities; true by default.
            enableSplit true
        }
        abi {
            // Different APKs are generated for devices with different CPU architectures; true by default.
            enableSplit true
        }
        language {
            // This is disabled so that the App Bundle does NOT split the APK for each language. same APK for all languages.
            enableSplit false
        }
    }

    buildTypes {

        debug {
            debuggable true
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.config
            resValue "string", "app_name", "MovieCatalog Debug"
        }

        alpha {
            //gradlew assembleAlpha appDistributionUploadAlpha

            firebaseAppDistribution {
                //releaseNotes="Here is new app release note"
                releaseNotes = "Correção na paginação da listagem de filmes e adicionando logo"

                //testers ="tester1@gmail.com,tester2@gmail.com"
                testersFile = "$projectDir/distribution/alpha/testers.txt"

                //groups ="qa-team, android-testers"
                groupsFile = "$projectDir/distribution/alpha/firebase_group.txt"

            }
            debuggable true
            applicationIdSuffix ".alpha"
            signingConfig signingConfigs.config
            resValue "string", "app_name", "MovieCatalog Alpha"
        }

        release {
            //gradlew assembleRelease appDistributionUploadRelease

            firebaseAppDistribution {
                //releaseNotes="Here is new app release note"
                releaseNotes = "release note"

                //testers ="tester1@gmail.com,tester2@gmail.com"
                testersFile = "$projectDir/distribution/release/testers.txt"

                //groups ="qa-team, android-testers"
                groupsFile = "$projectDir/distribution/release/firebase_group.txt"
            }
            debuggable false
            minifyEnabled false
            signingConfig signingConfigs.config
            resValue "string", "app_name", "MovieCatalog"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding { enabled = true }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.legacy:legacy-support-v4:+'

    apply plugin: 'com.google.gms.google-services'
}

dependencies(kotlin_dependencies)
dependencies(android_dependencies)
dependencies(room_dependencies)
dependencies(lifecycle_dependencies)
dependencies(retrofit_dependencies)
dependencies(rx_dependencies)
dependencies(debug_dependencies)
dependencies(utils_dependencies)
dependencies(firebase_dependencies)

